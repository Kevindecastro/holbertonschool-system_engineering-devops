# 2-secured and monitored web infrastructure

---

# üåê Web Infrastructure Presentation

## üîπ Infrastructure Components



### For every additional element, why you are adding it?

* **Three Firewalls**: Each firewall is placed to secure a layer of the infrastructure:

  * One between the internet and the load balancer.
  * One between the load balancer and the web servers.
  * One between the application/web servers and the database server.
    This layered security helps filter unauthorized access at every level.

* **SSL Certificate**: Ensures encrypted HTTPS traffic for `www.foobar.com`. It protects data integrity and user privacy by encrypting the communication between the user's browser and the website.

* **Three Monitoring Clients**: Each server (load balancer, web server, database server) runs a monitoring agent (e.g., SumoLogic collector, Datadog agent, or Prometheus Node Exporter) to track system health and performance.

### What are firewalls for?

Firewalls are used to control and restrict incoming and outgoing traffic based on predefined security rules. They help prevent unauthorized access, block malicious traffic, and reduce the attack surface of the infrastructure.

### Why is the traffic served over HTTPS?

HTTPS encrypts the data transferred between the client and the server using SSL/TLS. This prevents data eavesdropping, tampering, and man-in-the-middle attacks, ensuring secure communication and improving user trust.

### What monitoring is used for?

Monitoring is used to observe the system's health, detect anomalies, and ensure uptime. It helps identify issues like high CPU usage, memory leaks, or service failures before they affect end-users. It is also useful for auditing and compliance.

### How the monitoring tool is collecting data?

Monitoring tools collect data via agents or collectors installed on each server. These agents collect metrics (e.g., CPU, memory, disk, network usage), logs, and application-specific data. This data is sent to a central dashboard or cloud service for analysis and alerts.

### Explain what to do if you want to monitor your web server QPS?

To monitor QPS (Queries Per Second), configure your monitoring tool to track:

* HTTP request rate on the web server (using tools like Nginx logs or Apache mod\_status).
* Use metrics exporters (like Prometheus with Nginx exporter).
* Set alerts on sudden spikes or drops in QPS.

---

## ‚ö†Ô∏è Infrastructure Limitations

### Why terminating SSL at the load balancer level is an issue?

If SSL is terminated at the load balancer, the traffic between the load balancer and backend servers is unencrypted. This can be a security risk if someone gains access to internal traffic. End-to-end encryption is preferable in sensitive environments.

### Why having only one MySQL server capable of accepting writes is an issue?

A single writable MySQL server creates a **Single Point of Failure (SPOF)**. If it fails, no write operations can be performed, leading to data unavailability. A better solution is a primary-replica setup with automatic failover or a distributed database system.

### Why having servers with all the same components (database, web server and application server) might be a problem?

This design lacks **separation of concerns** and **scalability**:

* Difficult to scale specific layers independently (e.g., scaling web traffic requires duplicating the database unnecessarily).
* A compromise in one component affects all others.
* Updates or crashes in one component (e.g., app server) can impact the whole system.
  A more modular architecture allows better performance, security, and maintainability.